version: "3.5"
services:
  db:
    image: 'postgres:13'
    container_name: 'db'
    networks:
      - backend
    env_file: ./env/.db.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.9.29-management-alpine
    container_name: 'rabbitmq'
    networks:
      - backend
    ports:
      - '15672:15672'
    env_file:
      - ./env/.rabbitmq.env
    restart: unless-stopped

  redis:
    image: 'redis:7'
    container_name: 'redis'
    networks:
      - backend
    ports:
      - '16379:16379'
#    volumes:
#      - cache:/data
    restart: unless-stopped

  online_shop:
    build: .
    container_name: 'online_shop'
    image: 'online_shop:1'
    command: >
      sh -c 'cd src &&
             poetry run python3 manage.py migrate --no-input &&
             poetry run python3 manage.py createadmin &&
             poetry run python3 manage.py collectstatic --noinput &&
             poetry run gunicorn config.wsgi:application --bind 0.0.0.0:8080 '
    networks:
      - backend
    volumes:
      - ./src:/service/src
      - app_static:/service/src/static
      - app_media:/service/src/media
    env_file:
      - ./env/.online_shop.env
    restart: unless-stopped
    depends_on:
      - db
      - redis
      - rabbitmq

  worker1:
    build: .
    container_name: 'worker1'
    command: >
      sh -c "cd src && 
             poetry run celery -A celery_app.app worker --loglevel=info"
    networks:
      - backend
    volumes:
      - ./src:/service/src
      - app_static:/service/src/static
      - app_media:/service/src/media
    env_file:
      - ./env/.online_shop.env
    restart: unless-stopped
    depends_on:
      - online_shop

  web_server:
    image: 'nginx:alpine3.18'
    container_name: 'web_server'
    networks:
      - backend
    volumes:
      - ./nginx/default.conf:/etc/nginx/nginx.conf
      - app_static:/srv/static
      - app_media:/srv/media
    ports:
      - '80:80'
    restart: unless-stopped
    depends_on:
      - online_shop
      - worker1

networks:
  backend:

volumes:
  postgres_data:
  app_static:
  app_media: